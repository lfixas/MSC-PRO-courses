version: "3.8"

services:
  redis:
    image: redis:7.0.8-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    networks:
      - poll-tier
      - back-tier

  db:
    image: postgres:9.4
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - '5432:5432'
    networks:
      - result-tier
      - back-tier

  poll:
    build: ./poll
    container_name: poll
    restart: unless-stopped
    environment:
      REDIS_HOST: redis
      PORT: 80
      HOST: 0.0.0.0
    ports:
      - '5000:80'
    networks:
      - poll-tier
    depends_on:
      - redis

  worker:
    build:
      context: ./worker
      target: run
    container_name: worker
    restart: unless-stopped
    environment:
      REDIS_HOST: redis
      DATABASE_HOST: db
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    networks:
      - back-tier
    depends_on:
      - redis
      - db
      
  result:
    build: ./result
    container_name: result
    restart: unless-stopped
    environment:
      PORT: 80
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
      DATABASE_HOST: db
    ports:
      - '5001:80'
    networks:
      - result-tier
    depends_on:
      - db

networks:
  poll-tier:
    driver: bridge
  result-tier:
    driver: bridge
  back-tier:
    driver: bridge

volumes:
  db-data:
